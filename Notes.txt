
NOTES:
  Don't forget controller from work!!

  How It Works:
    PlayerMovement:
      Controls the plane within *2D screen-space*
      Cannot pass screen boundaries
      Rotates around to follow a point based on input
      IMPORANTLY: Does not control forward motion, and overall rotation!! This is done by the `Cinemachine Smooth Path`
        If you turn off the PlayerMovement script - plane still moves FORWARD and ROTATES along track, just do not have screen-space movement!!
    CameraFollow:
      Handles *screen-space* camera movement based on player
      Does not move camera forward OR rotate camera!! This is done by Cinemachine
      Actually *extends* player movement boundary, but is still clamped
      When CameraFollow is turned off, player still moves around 2D screen-boundary, but camera does not follow on screen-space

  Triggers (Player Collision):
    Each scene cube has a mesh (FOR SOME REASON) collider, non-trigger
    Player has trigger box collider and rigidbody
    OnTriggerEnter is called ONCE on enter and ONCE on exit
      This is not a problem for us, since we'll only ever enter once, quickly

  CinemachineDollyCart:
    Position is a float that tells along the CinemachineSmoothPath we are
      0 is reset to start
    *For testing: We can set Speed to 0 and change position to test the track!!!*

  Reverse:
    We'll need to *disable* PlayerMovement and dolly camera track movement while the Reverse script is going
    (We should have a script called Reverse, that's cool)
    TODO:
      We need to move not just the Player (Model), but it's parent including the camera
      This may be tricky since the Model and Player rotate differently (Model rotates a bit more I think)

    How rotation works:
    'GameplayPlane' only follows rotation of dolly
      'Player' follows dolly, as well as player controls, *except* Z-rotation (roll)
        'Model' follows dolly, player controls, and Z roll

    Position is even more weird
    Need some way to move ONLY:
      Model
      Camera
    As that's all that matters
    We can (probably should) record / playback each *independently*
      If we diable all required scripts, this should work just fine.

    Only problem now is position / rotations need to be reset after the move
      Should be able to store all child transforms, then SNAP them back in place after Reverse is finished


TODO:
  The Great Refactor (2019):
    ----Make sure all inputs are working (PlayerMovement.cs)
    ----Whitespace / Weird spacing
    ----Do we need ProBuilder??
          Env cubes seem to be using it
          Not REQUIRED(?) it seems, but nice to have
          Built into Unity now, lets not mess with it
    DOTween as new-fangled Unity package?

    Fix warnings by hooking references by Find / Tag
    Call MovementReseter once cleanly with an Event
    Extract ScriptToggler from MovementReversePlayback - Call it statically
    Remove the need for GetStack() in MovementStack
    Fix TODOs in the horrible abomination that is PlayerCollider
    Fix MovementReseter fucky wucki-ness with Start() (speed of CinemachineDollyCart)


  ----Intellisense for VS Code Unity:
    GOTTEM!
    I didn't have mono installed, and you can't use flatpak app with VS Code

  ---- Verify that DOTween is working/needed:
    It uses a .dll so.... (shrug)
    Yup! It works! (somehow)

  ----JSON parse error:
        an error with pro-builder
        it needs a json config file
        it came in empty from our repo
        it tried to auto-refill, but we killed it
        lets see if filling it back in fixes it

  ----Obj ref with pro-builder:
        Don't think this is breaking anymore? Need another build...

